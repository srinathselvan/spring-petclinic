trigger:
  branches:
    include:
      - main  # Define the branch that triggers the pipeline

pool:
  vmImage: 'ubuntu-latest'  # Use a single hosted agent (no parallelism)

variables:
  - group: api-token

stages:
  - stage: BuildAndTest
    jobs:
      - job: MavenBuildAndTest
        steps:
          - task: JavaToolInstaller@0
            inputs:
              versionSpec: '11'
              jdkArchitectureOption: 'x64'
            displayName: 'Install Java 11'
          
          - task: Maven@4
            inputs:
              mavenPomFile: 'pom.xml'
              mavenOptions: '-Xmx3072m'
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: 'default'
              jdkArchitectureOption: 'x64'
              publishJUnitResults: true
              testResultsFiles: '**/TEST-*.xml'
              goals: 'clean package'
            displayName: 'Build and Test with Maven'

  - stage: CodeAnalysis
    dependsOn: BuildAndTest  # Ensures that this stage runs after BuildAndTest
    jobs:
      - job: SonarCloudAnalysis
        steps:
          - task: SonarCloudPrepare@1
            inputs:
              SonarCloud: 'SonarCloud'
              organization: 'srinathselvan'
              projectKey: 'srinathselvan_spring-petclinic'
              projectName: 'spring-petclinic'
              scannerMode: 'CLI'
              configMode: 'manual'
              cliProjectKey: 'srinathselvan_spring-petclinic'
              cliProjectName: 'spring-petclinic'
              cliProjectVersion: '1.0'
              extraProperties: |
                sonar.organization=srinathselvan
                sonar.projectKey=srinathselvan_spring-petclinic
                sonar.host.url=https://sonarcloud.io
                sonar.login=$(SONAR_TOKEN)
            displayName: 'Prepare SonarCloud Analysis'

          - script: |
              mvn sonar:sonar \
                -Dsonar.organization=srinathselvan \
                -Dsonar.projectKey=srinathselvan_spring-petclinic \
                -Dsonar.host.url=https://sonarcloud.io \
                -Dsonar.login=$(SONAR_TOKEN)
            displayName: 'Run SonarCloud Analysis'

  - stage: DependencyScan
    dependsOn: CodeAnalysis  # Ensures that this stage runs after CodeAnalysis
    jobs:
      - job: SnykScan
        steps:
          - script: |
              curl -o- https://raw.githubusercontent.com/snyk/snyk/master/install.sh | bash
              snyk auth $(SNYK_TOKEN)
              snyk test --all-projects
            displayName: 'Run Snyk Dependency Scan'

  - stage: Package
    dependsOn: DependencyScan  # Ensures that this stage runs after DependencyScan
    jobs:
      - job: PackageArtifact
        steps:
          - task: Maven@4
            inputs:
              mavenPomFile: 'pom.xml'
              goals: 'package'
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: 'default'
              jdkArchitectureOption: 'x64'
            displayName: 'Package Application'
          
          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: '$(System.DefaultWorkingDirectory)/target/*.jar'
              artifactName: 'java-maven-app'
            displayName: 'Publish Artifact'
